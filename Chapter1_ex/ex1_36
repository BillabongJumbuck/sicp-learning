#lang sicp
(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess count)
    (let ((next (f guess)))
      (newline)
      (display count)
      (display "***")
      (display next)
      (if (close-enough? guess next)
         next
         (try next (+ count 1)))))
  (try first-guess 0))

(define res1 (fixed-point (lambda (x) (/ (log 1000) (log x))) 2.0))

(define res2 (fixed-point (lambda (x) (/ (+ (/ (log 1000) (log x)) x) 2)) 2.0))