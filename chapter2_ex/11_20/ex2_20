#lang sicp
(define (append list1 list2)
  (if (null? list1)
      list2
      (cons (car list1) (append (cdr list1) list2))))

(define (same-parity x . z)
  (define (iter a b res)
    (if (null? b)
        res
        (if (= (remainder (car b) 2) a)
            (iter a (cdr b) (append res (list (car b))))
            (iter a (cdr b) res))))
  (iter (remainder x 2) z (list x)))